ListNode *MergeLinkedLists(ListNode *head1, ListNode *head2)
    {
        ListNode *head = NULL;
        ListNode *p_cur = NULL;
        while(head1 != NULL && head2 != NULL)
        {
            ListNode *temp = NULL;
            if(head1->val <= head2->val)
            {
                temp = head1;
                head1 = head1->next;
            }
            else
            {
                temp = head2;
                head2 = head2->next;
            }
            
            if(head == NULL)
            {
                head = temp;
                p_cur = temp;
            }
            else
            {
                p_cur->next = temp;
                p_cur = p_cur->next;
            }
        }
        
        if(head1 != NULL)
            p_cur->next = head1;
        else if(head2 != NULL)
            p_cur->next = head2;
            
        return head;
    }
    
    ListNode* mergeKLists(vector<ListNode*>& lists) 
    {
        if(lists.empty())
            return NULL;
            
        queue<ListNode *> heads;
        for(int i = lists.size() - 1; i >= 0; --i)
        {
            if(lists[i] != NULL)
                heads.push(lists[i]);
        }
        
        if(heads.empty())
            return NULL;
        
        while(heads.size() > 1)
        {
            ListNode *p1 = heads.front();
            heads.pop();
            ListNode *p2 = heads.front();
            heads.pop();
            heads.push(MergeLinkedLists(p1, p2));
        }
        
        return heads.front();
    }

========================

